openapi: 3.0.0
info:
  description: Personal Goals
  version: '1.0'
  title: Personal Goals
  contact:
    email: lukas.slizik@gmail.com

  license:
    name: todo
    url: todo

paths:
  /activities:
    get:
      responses:
        200:
          description: A JSON array of Activities
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/Activity'
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
      responses:
        201:
          description: New Activity Created

  /activities/{activityId}:
    get:
      parameters:
      - in: path
        name: activityId
        required: true
        schema:
          type: string
          format: guid
      responses:
        200:
          description: A JSON representation of an Activity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
    delete:
      parameters:
      - in: path
        name: activityId
        required: true
        schema:
          type: string
          format: guid
      responses:
        204:
          description: Activity Deleted

  /activities/{activityId}/goals:
    get:
      parameters:
      - in: path
        name: activityId
        required: true
        schema:
          type: string
          format: guid
      responses:
        200:
          description: A JSON array of Goals belonging to the Activity
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Goal'
    post:
      parameters:
      - in: path
        name: activityId
        required: true
        schema:
          type: string
          format: guid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Goal'
      responses:
        201:
          description: New Goal created

  /activities/{activityId}/goals/{goalId}:
    get:
      parameters:
      - in: path
        name: activityId
        required: true
        schema:
          type: string
          format: guid
      - in: path
        name: goalId
        required: true
        schema:
          type: string
          format: guid
      responses:
        200:
          description: A JSON representation of a Goal belonging to the Activity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goal'
    delete:
      parameters:
      - in: path
        name: activityId
        required: true
        schema:
          type: string
          format: guid
      - in: path
        name: goalId
        required: true
        schema:
          type: string
          format: guid
      responses:
        204:
          description: Goal Deleted
      

  /activities/{activityId}/goals/{goalId}/achievements:
    get:
      parameters:
        - in: path
          name: activityId
          required: true
          schema:
            type: string
            format: guid
        - in: path
          name: goalId
          required: true
          schema:
            type: string
            format: guid
      responses:
        200:
          description: A JSON Array  of all Achievements belonging to a Goal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Achievement'
    post:
      parameters:
      - in: path
        name: activityId
        required: true
        schema:
          type: string
          format: guid
      - in: path
        name: goalId
        required: true
        schema:
          type: string
          format: guid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Achievement'
      responses:
        201:
          description: Achievement created
      

  /activities/{activityId}/goals/{goalId}/achievments/{achievmentId}:
    get:
      parameters:
        - in: path
          name: activityId
          required: true
          schema:
            type: string
            format: guid
        - in: path
          name: goalId
          required: true
          schema:
            type: string
            format: guid
        - in: path
          name: achievmentId
          required: true
          schema:
            type: string
            format: guid
      responses:
        200:
          description: A JSON representation of an Achievement belonging to a Goal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Achievement'
    delete:
      parameters:
      - in: path
        name: activityId
        required: true
        schema:
          type: string
          format: guid
      - in: path
        name: goalId
        required: true
        schema:
          type: string
          format: guid
      - in: path
        name: achievmentId
        required: true
        schema:
          type: string
          format: guid
      responses:
        204:
          description: Achievement was deleted

components:
  schemas:
    Goal:
      type: object
      properties:
        id:
          type: string
          format: guid
        target:
          type: number
          format: int32
        step:
          type: number
          format: int32
        unit:
          type: string
        multiplicator:
          type: number
          format: float
    Activity:
      type: object
      properties:
        id:
          type: string
          format: guid
        name:
          type: string
        description:
          type: string
    Achievement:
      type: object
      properties:
        id:
          type: string
          format: guid
        points:
          type: number
          format: float
        timePeriod:
          $ref: '#/components/schemas/TimePeriod'
    TimePeriod:
      type: object
      properties:
        id:
          type: string
          format: guid
        from:
          type: string
          format: date
        to:
          type: string
          format: date
